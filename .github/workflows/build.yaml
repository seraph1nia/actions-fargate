name: ci

on: push

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
       # https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-container-registry
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
              type=sha

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy-infra: 
    runs-on: ubuntu-latest
    permissions:
      contents: read
    defaults:
      run:
        working-directory: terraform
    steps:
    # https://github.com/hashicorp/setup-terraform
    - uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}


    - name: Terraform fmt
      id: fmt
      run: terraform fmt -check

    - name: Terraform Init
      id: init
      run: terraform init -backend-config="backend.hcl"

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color -var="image=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:{{ github.sha }}"
    
    - name: Terraform Apply
      id: apply
      run: terraform apply -auto-approve -var="image=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:{{ github.sha }}"